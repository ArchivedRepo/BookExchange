
Application usage:

# Login Credentials (Default User):
        (1) Standard user: username user, password: user
		    - A standard user has access to all of the pages, except the admin dashboard page.
	    (2) Admin user: username: admin, password: admin


# Standard User Features:
    index page:
           1. Search
              when click on "Search", the page will jump to a page showing related posts of items (note: there is
              no action if there is no input in the "search item" input box)
              when click on "Show All", the new page will showing all posts

           2. Log In / Profile
              The page will jump to login page if the user has not logged in, or jump to user profile page if
              the user has not logged in

           3. My cart
              If user did not log in, the page will jump to login page.
              Otherwise, the page will jump to the user's shopping cart.


    login page:
            1. Normal login and sign up process

            2. When click on "UofTExchange" logo, the page will jump back to the index page

            3. "Forget Password"
                The user is able to retrieve his/her password by clicking on "Forget password?" and then entering
                the email used to sign up for his/her account. If the email entered is valid, a recovery code
                will be sent to this email and the user can use this recovery code to reset the password.


    user profile page:

            The user is always able to jump to the index page by clicking on "UofTExchange" logo.

            1. Profile:
               The user is able to change profile picture, bio and phone number

            2. Purchases:
                The user is able to view his/her past transactions, the transaction is marked as complete,
                pending (if the transaction is still under review by Admin) or rejected (if the transaction
                is denied by Admin)

            3. Posts:
                a. The user is able to view the posts they made by clicking on "Posts I've made".

                In post page:
                b. The user is able to edit or remove his/her posts if the post has not been proceeded to transaction.
                c. The user is also able to make post by clicking on the Make Post button.

            4. Chat:
                The user is able to view his/her chat records by clicking on the chat button,
                and continue past chats by clicking on the corresponding user.
                S/he is also able to create a new chat by typing in a username and clicking on "+" button.

            5. Shopping Cart:
                The user is able to view his/her shopping cart by clicking on the shopping cart button at top-right.


    shopping cart page:
            1. The user can select the items s/he wants to check out by clicking on the checkbox to the right of
               each post or select all the items by clicking on the select all checkbox.

               Note: the user is not able to select the posts whose seller doesn't allow credit card payment.
               In this case, the user has to contact the seller and figure out the payment themselves.

            2. The page will jump to the payment method page when the user click on "place order".

            3. Remove from Cart
               When the user clicks "Remove from Cart" in a certain item in the cart, that item will be removed
               from the cart.

            4. Contact the Seller
               When click on "Contact the Seller" for each post, the system will either create a new chat if the user
               hasn't chat with the seller before or show the past chat histories in the chat box. The user can then
               chat with the seller.


    browse item page:
            1. Sorting items (View by price/type/post date)
               User can select how to view the postings among sorting by
               	a. Posting time(New to Old), b. Posting time(Old to New), c. price(High to Low) and d. price(Low to High).

            2. 	Add to Cart/Remove from Cart
               	When the user clicks "Add to Cart" for a certain post, that item will be added to the user's shopping cart.
               	If the user choose to "Remove from Cart" of an item, the shopping cart will also remove the item.
               	The number of items shown on "My cart" button is updated correspondingly.

            3. Contact the Seller
               Similar to the one in shopping cart.


#Admin User Features:

    dashboard page:
            1. The dashboard will show new message num since last login, number of transactions to be handled,
               number of total posts not yet sold and number of total standard users.

            2. Manage Posts
               When click on 'edit', the post section will change to edit mode, and the admin will be able to
               delete a post by clicking on the "close" icon. After edit post, the admin should click on "save",
               then the post section will be reloaded with posts still exist.

               The admin can also click "View All" and manage posts in browse item page.

            3. Manage Users
               When click on "show more / show less", more or less users will be displayed.
               Admin will be able to delete a user when click on the corresponding delete button, or view a
               user's profile in detail when click on "View Detail".


            4. Manage Transactions
               The transactions which have not been processed by the admin yet will show up in this section.
               When click on the green check icon, the admin will approve the transaction and
               when click on the red cross icon, the admin will deny the transaction.

            5. Chat
               The admin can chat with other users. This function is implemented the same for admin as for
               standard users.



=========================================================================================

Overview of routes:

app.js contains all the routes our application used, they can be divided into the following categories:

Note: All the pages are sent to the browser and then the init() function in the javascript will fetch
      information from server to generate the page accordingly.



1. User Management & information Retrieval:

    1.0 user creation and general methods
        /api/createAccount: used to create an new User

        /api/sendCode/:email: send an recovery code to the email, this will be used
        to recovery password of an user in case users forget their password

        /api/recover: input the recovery code to set a new password

        /api/isLogin: return whether the user is logged in, if so, send back the user

        /api/logout: destroy the session and logout the user

        /api/userProfile: redirect to the userProfile page


    1.1 retrieve info from User collection:
        /api/user/:username: used to retrieve the information of the user with username

        /api/getCurrentUser: used to retrieve the user that is currently logged in

        /api/findSeller/:postId: used to retrieve the seller of a post with postId

        /api/myPurchases: retrieve all the purchases of the user

        /api/myposts: retrieve all the post this user has made


        Admin only methods:
            /api/admin/userPurchases/:username: Retrieve the purchases record of the user with username

            /api/admin/userPosts/:username: retrieve the posts of the user with username

            /api/dashboard/users: retrieve non-admin users for admin dashboard


    1.2 update info of User collection:
        /api/changeProfilePicture: update the profile photo of an user

        /api/updatePhoneNumber: update the phone number of an user

        /api/updateBio/:newBio: update the bio of an user

        /api/addToCart/:postId: update the shopping cart of the user current logged in by adding post with postId

        /api/removeFromCart/:postId: remove the post with postId from the shopping cart of the user currently logged in


    1.3 delete info of User collection:
        /api/dashboard/user/:user: delete user from database, only Admin can invoke this operation




2) Post Management & Information Retrieval

    2.0 post creation:
        /api/postAd: post a new post

    2.1 post information retrieval:

        /api/search: This route is for browsing item. It expects "keyword", "option" (title/description or ISBN)
                      and "all" element (whether to show all the post on the website) in the request body,
                      and sends back the search result for "keyword" and the current user logged in.

        /api/dashboard/posts: find all the posts for admin dashboard

    2.2 post update:
        /api/updateAd: update the info of an existing post


    2.3 post deletion:
        /api/dashboard/post/:postId: delete the post with postId, only Admin can invoke this operation



3) Transaction Management & Information Retrieval

    3.0 transaction creation:
        /api/checkout: to checkout from shopping cart and create unsubmitted transactions.

        /api/sellItem: to create transactions in db for transactions handled by users themselves,
                        when a post is associated with a buyer and marked as sold.


    3.1 transaction status update:
        /api/submitPayment: this route is to submit the payment to the server, and set payment info and the isSubmitted
                            field for transaction

        /api/dashboard/transaction: this route is for admin to approve or deny a pending transaction, and set the
                                    the transaction as isCompleted


    3.2 transaction info retrieval:
        /api/myPurchases: to get the transactions whose buyer is a user

        /api/dashboard/transactions: to get all submitted but incomplete transactions for the transaction section
                                     of the admin dashboard

        /api/admin/userPurchases/:username: to get the purchases of a user when the user's profile is viewed by admin



4) Chat Management & Information:

    4.0 chat creation:
        /api/createChat: create a new chat between the user currently logged in and the user specified in request

    4.1 chat information retrieval:
        /api/startChat/:user: find the chat between the user currently logged in and the user specified in request

        /api/allChats: find all chat histories of the currently logged in

        /api/chat/:chatId: get a chat by id

    4.2 chat update:
        /api/chat/:chatId: add a new message in req.body to the chat with id being chatId
        /api/loadChat/:chatId: set the unread message array to empty array after messages has been loaded




